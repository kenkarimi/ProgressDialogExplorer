<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.ProgressDialogExplorer" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Customize your light theme here. -->
        <!-- <item name="colorPrimary">@color/my_light_primary</item> -->
    </style>

    <style name="AppTheme.Light.DarkActionBar" parent="Theme.MaterialComponents.Light.DarkActionBar">
        <item name="colorPrimary">@color/colorRed</item>
        <item name="colorPrimaryDark">@color/colorStatusBar</item>
        <item name="colorSecondary">@color/colorTeal</item>
    </style>

    <style name="AppTheme.Light.NoActionBar" parent="Theme.MaterialComponents.Light.NoActionBar">
        <item name="colorPrimary">@color/colorRed</item>
        <item name="colorPrimaryDark">@color/colorStatusBar</item>
        <item name="colorSecondary">@color/colorTeal</item>
    </style>

    <!--If you're using the deprecated ProgressDialog class.-->
    <style name="Theme.ProgressDialog" parent="Theme.MaterialComponents.Light.Dialog.Alert"> <!-- Previously Theme.AppCompat.Light.Dialog.Alert -->
        <item name="android:background">@color/colorRed</item>
        <item name="android:textColor">@color/colorWhite</item>
        <item name="android:textSize">16sp</item>
        <item name="android:minWidth">300dp</item> <!-- extend width of default progress dialog -->
        <item name="android:colorControlActivated">@color/white</item> <!-- Specifies the color for UI elements(in this case, the circle spinner) when they are selected/activated/focused, indicating that it is currently in focus or has been interacted with. -->
    </style>

    <!--If you're using an AlertDialog.Builder to create a custom progress dialog.-->
    <style name="Theme.AlertProgressDialog" parent="Theme.MaterialComponents.Light.Dialog.Alert"> <!-- Previously Theme.AppCompat.Light.Dialog.Alert -->
        <item name="android:background">@color/colorRed</item> <!-- color of entire background including inflated progress_dialog xml file + button background(even if both buttons ommitted, else entire row will be white in color) -->
    </style>

    <!--If you're using an AlertDialog.Builder to create an alert dialog with both positive & negative buttons or one of the two buttons.-->
    <style name="Theme.AlertDialog" parent="Theme.MaterialComponents.Light.Dialog.Alert"> <!-- Previously Theme.AppCompat.Light.Dialog.Alert -->
        <item name="android:background">@color/colorWhite</item> <!-- color of entire background including inflated alert_dialog xml file + button background(else entire row will be white in color) -->
    </style>

</resources>